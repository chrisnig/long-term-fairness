%display nonZeros
%display con none

%data transformed.cdat : J set, I set, W set, D set, d_bar_duty[I, D], g_req_on[J, I, W, D], g_req_off[J, W, D], E_pos[J, I, W, D], D_off[J, W, D], W_max, s_hat[J]

parameters:
	alpha_1 := 10;
	alpha_2 := 1;

variables:
	x[J, I, W, D] : binary;
	x_WE[J, W] : binary;
	delta_out_duty[I, W, D] : real[0..];
	delta_req_on[J, I, W, D] : binary;
	delta_req_off[J, W, D] : binary;
	
objectives:
	sum{i in I, w in W, d in D : alpha_1 * delta_out_duty[i, w, d]} +
	sum{j in J, i in I, w in W, d in D : alpha_2 * (2 - s_hat[j]) * delta_req_on[j, i, w, d]} + sum{j in J, w in W, d in D : alpha_2 * (2 - s_hat[j]) * delta_req_off[j, w, d]} -> min;

constraints:
	{
		i in I,
		w in W,
		d in D:
			CT2: delta_out_duty[i, w, d] = d_bar_duty[i, d] - sum{j in J : x[j, i, w, d]};
	}
	
	{
		j in J,
		i in I,
		w in W,
		d in D:
			CT3: delta_req_on[j, i, w, d] = g_req_on[j, i, w, d] - g_req_on[j, i, w, d] * x[j, i, w, d];
	}
	
	{
		j in J,
		w in W,
		d in D:
			CT4: sum{i in I : g_req_off[j, w, d] * x[j, i, w, d]} = delta_req_off[j, w, d];
	}
	
	{
		j in J,
		w in W,
		d in D:
			CT5: sum{i in I : x[j, i, w, d]} <= 1;
	}
	
	CT6: sum{j in J, i in I, w in W, d in D, D_off[j, w, d] == 1 : x[j, i, w, d]} <= 0;
	
	CT7: sum{j in J, i in I, w in W, d in D, E_pos[j, i, w, d] == 0 : x[j, i, w, d]} <= 0;
	
	{
		j in J,
		w in W,
		d in D,
		d > 1:
			CT8a: sum{i in I : x[j, i, w, d]} + sum{i in I : x[j, i, w, d-1]} <= 1;
	}
	
	{
		j in J,
		w in W,
		w > 1:
			CT8b: sum{i in I : x[j, i, w-1, 7]} + sum{i in I : x[j, i, w, 1]} <= 1;
	}
	
	{
		j in J,
		w in W,
		w > 1:
			CT9: x_WE[j, w] + x_WE[j, w-1] <= 1;
	}
	
	{
		j in J,
		w in W:
			CT10: sum{i in I, d in set(6, 7) : x[j, i, w, d]} <= 2 * x_WE[j, w];
	}
	
	#CT11b omitted because we use s_hat directly as a parameter
